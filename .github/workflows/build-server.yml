name: Build server
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: 'ex. 0.0.1'
  workflow_call:
    inputs:
      version:
        type: string
        required: true
        description: 'ex. 0.0.1'
    outputs:
      artifact-windows-x86-64:
        value: server-artifact-windows-x86-64
      artifact-linux-x86-64:
        value: server-artifact-linux-x86-64
      artifact-macos-arm64:
        value: server-artifact-macos-arm64
jobs:
  build-server:
    strategy:
      matrix:
        include:
          - run-on: windows-latest
            os: windows
            target: x86_64-pc-windows-msvc
            label: windows-x86-64
          - run-on: ubuntu-22.04
            os: linux
            target: x86_64-unknown-linux-gnu
            label: linux-x86-64
          - run-on: macos-13
            os: mac
            target: aarch64-apple-darwin
            label: macos-arm64

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.run-on }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Rust stable
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/update-cargo-toml-version
        with:
          version: ${{ inputs.version }}
          os: ${{ matrix.os }}
      - name: Add target
        run: |
          rustup update --no-self-update stable
          rustup target add ${{ matrix.target }}
      - name: Build rust
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        env:
          FILE_NAME: ${{ matrix.os == 'windows'  && 'painless-lsp.exe' || 'painless-lsp' }}
        with:
          name: server-artifact-${{ matrix.label }}
          path: target/${{ matrix.target }}/release/${{ env.FILE_NAME }}
